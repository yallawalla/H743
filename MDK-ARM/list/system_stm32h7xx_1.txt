; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --exceptions -oyyy\system_stm32h7xx_1.o --asm_dir=.\list\ --list_dir=.\list\ --depend=yyy\system_stm32h7xx_1.d --cpu=Cortex-M7.fp.dp --apcs=interwork -O3 --diag_suppress=9931 -I../Inc -I../Drivers/STM32H7xx_HAL_Driver/Inc -I../Drivers/STM32H7xx_HAL_Driver/Inc/Legacy -I../Middlewares/ST/STM32_USB_Host_Library/Core/Inc -I../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc -I../Drivers/CMSIS/Device/ST/STM32H7xx/Include -I../Middlewares/Third_Party/FatFs/src -I../Drivers/CMSIS/Include -I..\C\Inc -I..\Cpp\Inc -I.\RTE\_yyy -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32H7xx_DFP\2.1.0\Drivers\CMSIS\Device\ST\STM32H7xx\Include -D__UVISION_VERSION=523 -D_RTE_ -DSTM32H743xx -DUSE_HAL_DRIVER -DSTM32H743xx --omf_browse=yyy\system_stm32h7xx_1.crf ../Src/system_stm32h7xx.c]
                          THUMB

                          AREA ||i.SystemCoreClockUpdate||, CODE, READONLY, ALIGN=2

                  SystemCoreClockUpdate PROC
;;;272      */
;;;273    void SystemCoreClockUpdate (void)
000000  4848              LDR      r0,|L1.292|
;;;274    {
000002  b5f0              PUSH     {r4-r7,lr}
;;;275    uint32_t pllp = 2, pllsource = 0, pllm = 2 ,tmp, pllfracen  =0 , hsivalue = 0;
;;;276    float fracn1, pllvco = 0 ;
;;;277    
;;;278      /* Get SYSCLK source -------------------------------------------------------*/
;;;279    
;;;280      switch (RCC->CFGR & RCC_CFGR_SWS)
;;;281      {
;;;282      case 0x00:  /* HSI used as system clock source */
;;;283        SystemCoreClock = (uint32_t) (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3));
000004  4f47              LDR      r7,|L1.292|
000006  6802              LDR      r2,[r0,#0]            ;280
000008  3f10              SUBS     r7,r7,#0x10
00000a  4947              LDR      r1,|L1.296|
00000c  4847              LDR      r0,|L1.300|
00000e  f0120238          ANDS     r2,r2,#0x38           ;280
000012  d00a              BEQ      |L1.42|
;;;284        break;
;;;285    
;;;286      case 0x08:  /* CSI used as system clock  source */
;;;287        SystemCoreClock = CSI_VALUE;
000014  110c              ASRS     r4,r1,#4
000016  2a08              CMP      r2,#8                 ;280
000018  d005              BEQ      |L1.38|
00001a  2a10              CMP      r2,#0x10              ;280
;;;288        break;
;;;289    
;;;290      case 0x10:  /* HSE used as system clock  source */
;;;291        SystemCoreClock = HSE_VALUE;
00001c  ea4f0ce1          ASR      r12,r1,#3
000020  d009              BEQ      |L1.54|
000022  2a18              CMP      r2,#0x18              ;280
000024  d00a              BEQ      |L1.60|
                  |L1.38|
000026  6004              STR      r4,[r0,#0]            ;288  ; SystemCoreClock
000028  e058              B        |L1.220|
                  |L1.42|
00002a  683a              LDR      r2,[r7,#0]            ;283
00002c  f3c202c1          UBFX     r2,r2,#3,#2           ;283
000030  40d1              LSRS     r1,r1,r2              ;283
000032  6001              STR      r1,[r0,#0]            ;284  ; SystemCoreClock
000034  e052              B        |L1.220|
                  |L1.54|
;;;292        break;
000036  f8c0c000          STR      r12,[r0,#0]  ; SystemCoreClock
00003a  e04f              B        |L1.220|
                  |L1.60|
;;;293    
;;;294      case 0x18:  /* PLL1 used as system clock  source */
;;;295    
;;;296        /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
;;;297        SYSCLK = PLL_VCO / PLLR
;;;298        */
;;;299        pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
00003c  4a39              LDR      r2,|L1.292|
;;;300        pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
;;;301        pllfracen = RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN;
;;;302        fracn1 = (pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
00003e  f8dfe0e4          LDR      lr,|L1.292|
000042  3218              ADDS     r2,r2,#0x18           ;299
000044  1d16              ADDS     r6,r2,#4              ;301
000046  f10e0e24          ADD      lr,lr,#0x24
00004a  6815              LDR      r5,[r2,#0]            ;299
;;;303        switch (pllsource)
;;;304        {
;;;305    
;;;306        case 0x00:  /* HSI used as PLL clock source */
;;;307          hsivalue = (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3)) ;
;;;308          pllvco = (hsivalue/ pllm) * ((RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/0x2000) +1 );
00004c  1d33              ADDS     r3,r6,#4
00004e  6812              LDR      r2,[r2,#0]            ;300
000050  eddf0a37          VLDR     s1,|L1.304|
000054  eeb71a00          VMOV.F32 s2,#1.00000000
000058  6836              LDR      r6,[r6,#0]            ;301
00005a  f8dee000          LDR      lr,[lr,#0]            ;302
00005e  f0150503          ANDS     r5,r5,#3              ;299
000062  f0060601          AND      r6,r6,#1              ;301
000066  f3c21205          UBFX     r2,r2,#4,#6           ;300
00006a  f3ce0ecc          UBFX     lr,lr,#3,#13          ;302
00006e  fb1ef606          SMULBB   r6,lr,r6              ;302
000072  ee006a10          VMOV     s0,r6                 ;302
000076  eeb80a40          VCVT.F32.U32 s0,s0                 ;302
00007a  d009              BEQ      |L1.144|
00007c  2d01              CMP      r5,#1                 ;303
00007e  d001              BEQ      |L1.132|
000080  2d02              CMP      r5,#2                 ;303
000082  d03d              BEQ      |L1.256|
                  |L1.132|
;;;309          break;
;;;310    
;;;311        case 0x01:  /* CSI used as PLL clock source */
;;;312          pllvco = (CSI_VALUE / pllm) * ((RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/0x2000) +1 );
000084  6819              LDR      r1,[r3,#0]
000086  fbb4f2f2          UDIV     r2,r4,r2
00008a  f3c10108          UBFX     r1,r1,#0,#9
;;;313          break;
00008e  e03c              B        |L1.266|
                  |L1.144|
000090  683d              LDR      r5,[r7,#0]            ;307
000092  681c              LDR      r4,[r3,#0]            ;308
000094  f3c505c1          UBFX     r5,r5,#3,#2           ;307
000098  f3c40408          UBFX     r4,r4,#0,#9           ;308
00009c  40e9              LSRS     r1,r1,r5              ;307
00009e  ee014a90          VMOV     s3,r4                 ;308
0000a2  fbb1f1f2          UDIV     r1,r1,r2              ;308
0000a6  eef81a61          VCVT.F32.U32 s3,s3                 ;308
0000aa  ee401a20          VMLA.F32 s3,s0,s1              ;308
0000ae  ee001a10          VMOV     s0,r1                 ;308
0000b2  ee710a81          VADD.F32 s1,s3,s2              ;308
0000b6  eeb80a40          VCVT.F32.U32 s0,s0                 ;308
0000ba  bf00              NOP                            ;308
                  |L1.188|
0000bc  ee200a20          VMUL.F32 s0,s0,s1              ;308
;;;314    
;;;315        case 0x02:  /* HSE used as PLL clock source */
;;;316          pllvco = (HSE_VALUE / pllm) * ((RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/0x2000) +1 );
;;;317          break;
;;;318    
;;;319        default:
;;;320          pllvco = (CSI_VALUE / pllm) * ((RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/0x2000) +1 );
;;;321          break;
;;;322        }
;;;323        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >>9) + 1 ) ;
0000c0  6819              LDR      r1,[r3,#0]
0000c2  f3c12146          UBFX     r1,r1,#9,#7
0000c6  1c49              ADDS     r1,r1,#1
;;;324        SystemCoreClock = (uint32_t) (pllvco/pllp);
0000c8  ee001a90          VMOV     s1,r1
0000cc  eef80a60          VCVT.F32.U32 s1,s1
0000d0  ee801a20          VDIV.F32 s2,s0,s1
0000d4  eebc0ac1          VCVT.U32.F32 s0,s2
0000d8  ed800a00          VSTR     s0,[r0,#0]
                  |L1.220|
;;;325        break;
;;;326    
;;;327      default:
;;;328        SystemCoreClock = CSI_VALUE;
;;;329        break;
;;;330      }
;;;331    
;;;332      /* Compute HCLK frequency --------------------------------------------------*/
;;;333      /* Get HCLK prescaler */
;;;334      tmp = D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> POSITION_VAL(RCC_D1CFGR_D1CPRE_0)];
0000dc  4911              LDR      r1,|L1.292|
0000de  f44f7280          MOV      r2,#0x100
0000e2  3108              ADDS     r1,r1,#8
0000e4  6809              LDR      r1,[r1,#0]
0000e6  fa92f3a2          RBIT     r3,r2
;;;335      /* HCLK frequency */
;;;336      SystemCoreClock >>= tmp;
0000ea  6802              LDR      r2,[r0,#0]  ; SystemCoreClock
0000ec  f4016170          AND      r1,r1,#0xf00          ;334
0000f0  fab3f383          CLZ      r3,r3                 ;334
0000f4  40d9              LSRS     r1,r1,r3              ;334
0000f6  4b0f              LDR      r3,|L1.308|
0000f8  5c59              LDRB     r1,[r3,r1]            ;334
0000fa  40ca              LSRS     r2,r2,r1
0000fc  6002              STR      r2,[r0,#0]  ; SystemCoreClock
;;;337    }
0000fe  bdf0              POP      {r4-r7,pc}
                  |L1.256|
000100  6819              LDR      r1,[r3,#0]            ;316
000102  fbbcf2f2          UDIV     r2,r12,r2             ;316
000106  f3c10108          UBFX     r1,r1,#0,#9           ;316
                  |L1.266|
00010a  ee011a90          VMOV     s3,r1                 ;320
00010e  eeb82a61          VCVT.F32.U32 s4,s3                 ;320
000112  ee012a90          VMOV     s3,r2                 ;320
000116  ee002a20          VMLA.F32 s4,s0,s1              ;320
00011a  eeb80a61          VCVT.F32.U32 s0,s3                 ;320
00011e  ee720a01          VADD.F32 s1,s4,s2              ;320
000122  e7cb              B        |L1.188|
;;;338    #if defined (DATA_IN_ExtSRAM) || defined (DATA_IN_ExtSDRAM)
                          ENDP

                  |L1.292|
                          DCD      0x58024410
                  |L1.296|
                          DCD      0x03d09000
                  |L1.300|
                          DCD      ||.data||
                  |L1.304|
000130  39000000          DCFS     0x39000000 ; 0.0001220703125
                  |L1.308|
                          DCD      ||.constdata||

                          AREA ||i.SystemInit||, CODE, READONLY, ALIGN=2

                  SystemInit PROC
;;;166      */
;;;167    void SystemInit (void)
000000  4a1d              LDR      r2,|L2.120|
;;;168    {
000002  b5f0              PUSH     {r4-r7,lr}
;;;169      /* FPU settings ------------------------------------------------------------*/
;;;170      #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
;;;171        SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
;;;172      #endif
;;;173      /* Reset the RCC clock configuration to the default reset state ------------*/
;;;174      /* Set HSION bit */
;;;175      RCC->CR |= RCC_CR_HSION;
000004  491d              LDR      r1,|L2.124|
000006  6814              LDR      r4,[r2,#0]            ;171
;;;176    
;;;177      /* Reset CFGR register */
;;;178      RCC->CFGR = 0x00000000;
000008  2000              MOVS     r0,#0
00000a  4b1c              LDR      r3,|L2.124|
00000c  f4440470          ORR      r4,r4,#0xf00000       ;171
000010  6014              STR      r4,[r2,#0]            ;171
000012  3310              ADDS     r3,r3,#0x10
000014  680a              LDR      r2,[r1,#0]            ;175
;;;179    
;;;180      /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
;;;181      RCC->CR &= (uint32_t)0xEAF6ED7F;
000016  4c1a              LDR      r4,|L2.128|
000018  f0420201          ORR      r2,r2,#1              ;175
00001c  600a              STR      r2,[r1,#0]            ;175
00001e  6018              STR      r0,[r3,#0]            ;178
000020  680d              LDR      r5,[r1,#0]
;;;182    
;;;183      /* Reset D1CFGR register */
;;;184      RCC->D1CFGR = 0x00000000;
000022  4a16              LDR      r2,|L2.124|
000024  4025              ANDS     r5,r5,r4              ;181
000026  600d              STR      r5,[r1,#0]            ;181
000028  3218              ADDS     r2,r2,#0x18
;;;185    
;;;186      /* Reset D2CFGR register */
;;;187      RCC->D2CFGR = 0x00000000;
00002a  1d13              ADDS     r3,r2,#4
;;;188    
;;;189      /* Reset D3CFGR register */
;;;190      RCC->D3CFGR = 0x00000000;
00002c  1d1c              ADDS     r4,r3,#4
;;;191    
;;;192      /* Reset PLLCKSELR register */
;;;193      RCC->PLLCKSELR = 0x00000000;
00002e  4d13              LDR      r5,|L2.124|
000030  6010              STR      r0,[r2,#0]            ;184
000032  3528              ADDS     r5,r5,#0x28
000034  6018              STR      r0,[r3,#0]            ;187
;;;194    
;;;195      /* Reset PLLCFGR register */
;;;196      RCC->PLLCFGR = 0x00000000;
000036  1d2a              ADDS     r2,r5,#4
000038  6020              STR      r0,[r4,#0]            ;190
;;;197      /* Reset PLL1DIVR register */
;;;198      RCC->PLL1DIVR = 0x00000000;
00003a  1d13              ADDS     r3,r2,#4
;;;199      /* Reset PLL1FRACR register */
;;;200      RCC->PLL1FRACR = 0x00000000;
00003c  1d1c              ADDS     r4,r3,#4
00003e  6028              STR      r0,[r5,#0]            ;193
;;;201    
;;;202      /* Reset PLL2DIVR register */
;;;203      RCC->PLL2DIVR = 0x00000000;
000040  1d25              ADDS     r5,r4,#4
000042  6010              STR      r0,[r2,#0]            ;196
;;;204    
;;;205      /* Reset PLL2FRACR register */
;;;206    
;;;207      RCC->PLL2FRACR = 0x00000000;
000044  1d2a              ADDS     r2,r5,#4
000046  6018              STR      r0,[r3,#0]            ;198
;;;208      /* Reset PLL3DIVR register */
;;;209      RCC->PLL3DIVR = 0x00000000;
000048  1d13              ADDS     r3,r2,#4
00004a  6020              STR      r0,[r4,#0]            ;200
;;;210    
;;;211      /* Reset PLL3FRACR register */
;;;212      RCC->PLL3FRACR = 0x00000000;
00004c  1d1c              ADDS     r4,r3,#4
00004e  6028              STR      r0,[r5,#0]            ;203
000050  6010              STR      r0,[r2,#0]            ;207
000052  6018              STR      r0,[r3,#0]            ;209
000054  6020              STR      r0,[r4,#0]
;;;213    
;;;214      /* Reset HSEBYP bit */
;;;215      RCC->CR &= (uint32_t)0xFFFBFFFF;
000056  680a              LDR      r2,[r1,#0]
;;;216    
;;;217      /* Disable all interrupts */
;;;218      RCC->CIER = 0x00000000;
;;;219    
;;;220      /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
;;;221      *((__IO uint32_t*)0x51008108) = 0x00000001;
000058  2401              MOVS     r4,#1
00005a  4b08              LDR      r3,|L2.124|
;;;222    
;;;223    #if defined (DATA_IN_ExtSRAM) || defined (DATA_IN_ExtSDRAM)
;;;224      SystemInit_ExtMemCtl();
;;;225    #endif /* DATA_IN_ExtSRAM || DATA_IN_ExtSDRAM */
;;;226    
;;;227      /* Configure the Vector Table location add offset address ------------------*/
;;;228    #ifdef VECT_TAB_SRAM
;;;229      SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal ITCMSRAM */
;;;230    #else
;;;231      SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET;       /* Vector Table Relocation in Internal FLASH */
00005c  4f06              LDR      r7,|L2.120|
00005e  06e6              LSLS     r6,r4,#27
000060  4d08              LDR      r5,|L2.132|
000062  3360              ADDS     r3,r3,#0x60           ;218
000064  3f80              SUBS     r7,r7,#0x80
000066  f4222280          BIC      r2,r2,#0x40000        ;215
00006a  600a              STR      r2,[r1,#0]            ;215
00006c  6018              STR      r0,[r3,#0]            ;218
00006e  f8c54108          STR      r4,[r5,#0x108]        ;221
000072  603e              STR      r6,[r7,#0]
;;;232    #endif
;;;233    
;;;234    }
000074  bdf0              POP      {r4-r7,pc}
;;;235    
                          ENDP

000076  0000              DCW      0x0000
                  |L2.120|
                          DCD      0xe000ed88
                  |L2.124|
                          DCD      0x58024400
                  |L2.128|
                          DCD      0xeaf6ed7f
                  |L2.132|
                          DCD      0x51008000

                          AREA ||.ARM.exidx||, LINKORDER=||i.SystemInit||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          REQUIRE __aeabi_unwind_cpp_pr0
                          DCD      0x00000000
                          RELOC 42, ||i.SystemInit||
                          DCD      0x80abb0b0

                          AREA ||area_number.4||, LINKORDER=||i.SystemCoreClockUpdate||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.4||, ||.ARM.exidx||
                          REQUIRE __aeabi_unwind_cpp_pr0
                          DCD      0x00000000
                          RELOC 42, ||i.SystemCoreClockUpdate||
                          DCD      0x80abb0b0

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  D1CorePrescTable
000000  00000000          DCB      0x00,0x00,0x00,0x00
000004  01020304          DCB      0x01,0x02,0x03,0x04
000008  01020304          DCB      0x01,0x02,0x03,0x04
00000c  06070809          DCB      0x06,0x07,0x08,0x09

                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x03d09000

                          AREA ||area_number.9||, DATA, ALIGN=2

                          EXPORTAS ||area_number.9||, ||.data||
                  SystemD2Clock
                          DCD      0x03d09000

;*** Start embedded assembler ***

#line 1 "../Src/system_stm32h7xx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32h7xx_c_5d646a67____REV16|
#line 447 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___18_system_stm32h7xx_c_5d646a67____REV16| PROC
#line 448

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32h7xx_c_5d646a67____REVSH|
#line 462
|__asm___18_system_stm32h7xx_c_5d646a67____REVSH| PROC
#line 463

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32h7xx_c_5d646a67____RRX|
#line 649
|__asm___18_system_stm32h7xx_c_5d646a67____RRX| PROC
#line 650

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
